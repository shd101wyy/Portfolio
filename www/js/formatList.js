/**
 *
 *
 * File {
 * 		name:
 * 		kind:
 * 		size:
 * 		commit_revision:
 * 		commit_author:
 * 		commit_date
 * 		parent:
 * 		single_name:
 * 		files: (children)
 * }
 *
 */
function File (info){
    this.name = info.name;
    this.kind = info.kind;
    this.size = info.size;
    this.commit_revision = info.commit_revision;
    this.commit_author = info.commit_author;
    this.commit_date = info.commit_date;
    this.parent = info.parent;
    this.single_name = info.single_name;
    this.files = {};
    this.commit_msg = null;
}
/**
 * Clean the JSON file that is generated by xml2js
 */
function cleanListJSON(list_json){
    /**
     * Output is in format of
     * {
     *     name:
     *     kind:
     *     size:
     *     commit_revision:
     *     commit_author:
     *     commit_date:
     *     parent:    get parent folder
     *     children:  if it is dir, recursively list all children
     * }
     */
    var home_directory = new File({
        name: ".",
        kind: "dir",
        size: "undefined",
        commit_revision: "undefined",
        commit_author: "undefined",
        commit_date: "undefined",
        parent: null,
        single_name: "."
    });
    list_json = list_json.lists.list[0].entry;
    /**
     * Right now each element in list_json looks like
     * {
        "$":{
           "kind":"dir"
        },
        "name":[
           "Assignment0"
        ],
        "commit":[
           {
              "$":{
                 "revision":"478"
              },
              "author":[
                 "ywang189"
              ],
              "date":[
                 "2015-02-06T02:50:23.452896Z"
              ]
           }
        ]
     }
     *
     */
    for(var i = 0; i < list_json.length; i++){
        var element = list_json[i];
        var info = {
                kind: element.$.kind,
                name: element.name[0],
                // commit: element.commit[0],
                size: (element.$.kind == "file" ? element.size[0] : "undefined"),
                commit_revision: element.commit[0].$.revision,
                commit_author: element.commit[0].author[0],
                commit_date: element.commit[0].date[0]
        };
        // split file name
        var file_name_arr = element.name[0].split("/");
        var current_folder = home_directory;
        for(var j = 0; j < file_name_arr.length; j++){
            if (file_name_arr[j] in current_folder.files){ // go to subfolder
                current_folder = current_folder.files[file_name_arr[j]];
            }
            else{
                var new_file = new File( info );
                new_file.parent = current_folder;
                new_file.single_name = file_name_arr[j]; // add single name.. remove path
                if (info.commit_revision in LOG){ // add commit msg
                    new_file.commit_msg = LOG[info.commit_revision].msg;
                }
                current_folder.files[new_file.single_name] = new_file; // add to directory
            }
        }
    }
    return home_directory;
}
